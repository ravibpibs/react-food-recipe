[{"C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\index.js":"1","C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\App.js":"2","C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\Header.js":"3","C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\Recipes.js":"4","C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\RecipeItem.js":"5"},{"size":170,"mtime":1609652406719,"results":"6","hashOfConfig":"7"},{"size":1049,"mtime":1609695368273,"results":"8","hashOfConfig":"7"},{"size":752,"mtime":1609695191376,"results":"9","hashOfConfig":"7"},{"size":468,"mtime":1609695006622,"results":"10","hashOfConfig":"7"},{"size":565,"mtime":1609695055359,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"okmr8b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\index.js",[],["25","26"],"C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\App.js",["27","28"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Recipes from \"./components/Recipes\";\nimport Axios from \"axios\";\n\nfunction App() {\n  \n  const [search, setSearch] = useState(\"chiken\");\n  const [recipes, setRecipes] = useState([]);\n\n  const APP_ID = \"11236568\";\n  const APP_KEY = \"c8161fa59465717bba6d0dbfd95ecac6\t\";\n\n  useEffect(async () => {\n    getRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const res = await Axios.get(\n      `https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    setRecipes(res.data.hits);\n  };\n\n\n  \n  const onInputChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const onSearchClick = () => {\n    getRecipes();\n  };\n  return (\n    <div className=\"App\">\n      <Header\n        search={search}\n        onInputChange={onInputChange}\n        onSearchClick={onSearchClick}\n      />\n      <div className=\"container\">\n        <Recipes recipes={recipes} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\Header.js",[],"C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\Recipes.js",[],"C:\\Users\\RAVI JHA\\.vscode\\react-food-recipe\\src\\components\\RecipeItem.js",["29"],"import React from \"react\";\r\n\r\nconst RecipeItem = props => {\r\n  const { name, image, ingredientLines } = props;\r\n  return (\r\n      <div class=\"card py-2 text-center\">\r\n        <img src={image} className=\"img-fluid w-50 mx-auto rounded-circle\" />\r\n        <div class=\"card-body\">\r\n          <h5>{name}</h5>\r\n        </div>\r\n        <ul class=\"list-group list-group-flush\">\r\n          {ingredientLines.map(ingredient => (\r\n            <li className=\"list-group-item\">{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default RecipeItem;",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":15,"column":13,"nodeType":"36","endLine":17,"endColumn":4},{"ruleId":"34","severity":1,"message":"37","line":17,"column":6,"nodeType":"38","endLine":17,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":9,"nodeType":"42","endLine":7,"endColumn":78},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getRecipes'. Either include it or remove the dependency array.","ArrayExpression",["45"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [getRecipes]",{"range":"48","text":"49"},[435,437],"[getRecipes]"]